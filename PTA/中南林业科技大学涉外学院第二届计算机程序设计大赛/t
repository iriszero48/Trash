7-8 验证“哥德巴赫猜想” (12 分)
数学领域著名的“哥德巴赫猜想”的大致意思是：任何一个大于2的偶数总能表示为两个素数之和。比如：24=5+19，其中5和19都是素数。本实验的任务是设计一个程序，验证20亿以内的偶数都可以分解成两个素数之和。

输入格式：
输入在一行中给出一个(2, 2 000 000 000]范围内的偶数N。

输出格式：
在一行中按照格式“N = p + q”输出N的素数分解，其中p ≤ q均为素数。又因为这样的分解不唯一（例如24还可以分解为7+17），要求必须输出所有解中p最小的解。

输入样例：
24
输出样例：
24 = 5 + 19























7-9 梅森数 (12 分)
形如2
​n
​​ −1的素数称为梅森数（Mersenne Number）。例如2
​2
​​ −1=3、2
​3
​​ −1=7都是梅森数。1722年，双目失明的瑞士数学大师欧拉证明了2
​31
​​ −1=2147483647是一个素数，堪称当时世界上“已知最大素数”的一个记录。

本题要求编写程序，对任一正整数n（n<20），输出所有不超过2
​n
​​ −1的梅森数。

输入格式：
输入在一行中给出正整数n（n<20）。

输出格式：
按从小到大的顺序输出所有不超过2
​n
​​ −1的梅森数，每行一个。如果完全没有，则输出“None”。

输入样例：
6
输出样例：
3
7
31














7-11 出租 (12 分)
下面是新浪微博上曾经很火的一张图：



一时间网上一片求救声，急问这个怎么破。其实这段代码很简单，index数组就是arr数组的下标，index[0]=2 对应 arr[2]=1，index[1]=0 对应 arr[0]=8，index[2]=3 对应 arr[3]=0，以此类推…… 很容易得到电话号码是18013820100。

本题要求你编写一个程序，为任何一个电话号码生成这段代码 —— 事实上，只要生成最前面两行就可以了，后面内容是不变的。

输入格式：
输入在一行中给出一个由11位数字组成的手机号码。

输出格式：
为输入的号码生成代码的前两行，其中arr中的数字必须按递减顺序给出。

输入样例：
18013820100
输出样例：
int[] arr = new int[]{8,3,2,1,0};
int[] index = new int[]{3,0,4,3,1,0,2,4,3,4,4};
