#使用tkinter开发猜数字游戏，运行效果如下图所示。
#程序运行时，系统生成一个1024以内的随机数，然后提示用户进行猜测并根据用户输入进行必要的提示（猜对了、太大了、太小了），如果猜对则提前结束程序。程序要统计玩家猜的次数，如果次数用完仍没有猜对，提示游戏结束并给出正确答案。
(tk := __import__('tkinter'), done := False, times := [1], target := __import__('random').SystemRandom().randint(1, 1024), root := tk.Tk(), left := tk.Frame(root), right := tk.Frame(root), right_cent := tk.Frame(right), user_input := tk.Entry(right_cent), output := tk.Label(right, text=''), upValue := [1024], downValue := [1], up := tk.Label(left, text=upValue), down := tk.Label(left, text=downValue), valid := list(map(str, range(1, 1025))), submit_func := lambda *_: output.config(text="invalid input") if user_input.get() not in valid else (answer := int(user_input.get()), output.config(text={(v := answer == target): ["猜对了", done := v, user_input.config(state='disabled') if v else None], (v := answer < target): ["太小了", down.config(text=(downValue.append(answer), downValue[-1])[-1]) if v and downValue[-1] < answer else None], (v := answer > target): ["太大了", up.config(text=(upValue.append(answer), upValue[-1])[-1]) if v and upValue[-1] > answer else None], (v := times[-1] > 10 and not done): ["游戏结束，答案是{}".format(target), user_input.config(state='disabled') if v else None]}.get(True)[0]), times.append(times[-1] + 1)), user_input.bind('<Return>', submit_func), up.pack(side='top'), tk.Label(left, text='').pack(side='top'), output.pack(side='top'), user_input.pack(side='left'), tk.Button(right_cent, text='猜', command=submit_func).pack(side='left'), down.pack(side='bottom'), tk.Button(right, text='关闭', command=lambda: root.destroy()).pack(side='bottom'), right_cent.pack(side='top'), left.pack(side='left'), right.pack(side='left'), root.title('猜数字游戏'), root.mainloop())
